{"ast":null,"code":"import { getRandomArbitrary, sample, getFrame } from '../prototypes/prototype_4/utilities';\nimport { largeWhiteCircleModel, circleModel } from '../prototypes/prototype_4/models';\nimport { getLargeWhiteCircleStore, setLargeWhiteCircleStore } from '../prototypes/prototype_4/store';\n\nfunction createLargeWhiteCircle() {\n  return new Promise(function (resolve, reject) {\n    console.log('createLargeWhiteCircle call');\n    var circles = getLargeWhiteCircleStore();\n    var settings;\n\n    if (circles.length) {\n      var firstCircleVSide = circles[0]['types']['vSide'];\n      var firstCircleHSide = circles[0]['types']['hSide'];\n      var firstCircleSize = circles[0]['types']['size'];\n      var vSide = firstCircleVSide == 'top' ? 'bottom' : 'top';\n      var hSide = firstCircleHSide == 'left' ? 'right' : 'left';\n      var size = firstCircleSize == 'small' ? 'large' : 'small';\n      settings = createCircle(largeWhiteCircleModel.className, vSide, hSide, size, 1);\n    } else {\n      var _vSide = sample(Object.keys(largeWhiteCircleModel['sides']['vSides']));\n\n      var _hSide = sample(Object.keys(largeWhiteCircleModel['sides']['hSides']));\n\n      var _size = sample(Object.keys(largeWhiteCircleModel['sizes']));\n\n      settings = createCircle(largeWhiteCircleModel.className, _vSide, _hSide, _size, 1);\n    }\n\n    circles.push(settings);\n    setLargeWhiteCircleStore(circles);\n    resolve();\n  });\n}\n\nfunction createCircle(className, vSide, hSide, size, zIndex) {\n  var frame = getFrame();\n  var largeWhiteCircleStore = getLargeWhiteCircleStore();\n  var circleElement = document.createElement('div');\n  var circleType = circleModel['largeCircleWhite'];\n  circleElement.classList.add('circle');\n  var vSideSettings = largeWhiteCircleModel['sides'][vSide];\n  var hSideSettings = largeWhiteCircleModel['sides'][hSide];\n  var sizeSettings = largeWhiteCircleModel['sizes'][size];\n  var diameterPercent = getRandomArbitrary(sizeSettings['from'], sizeSettings['to']);\n  var diameter = frame.getBoundingClientRect().width / 100 * diameterPercent;\n  var shiftY = generateShiftYFromSide(vSide, diameter, circleElement);\n  var shiftX = generateShiftXFromSide(hSide, diameter, circleElement);\n  var settings = {\n    types: {\n      vSide: vSide,\n      hSide: hSide,\n      size: size\n    },\n    shiftY: shiftY,\n    shiftX: shiftX,\n    diameter: diameter\n  };\n  circleElement.style.width = [diameter, 'px'].join('');\n  circleElement.style.height = [diameter, 'px'].join('');\n  circleElement.style.zIndex = zIndex;\n  circleElement.classList.add(className);\n  frame.appendChild(circleElement);\n  return settings;\n}\n\nfunction generateShiftYFromSide(side, diameter, circleElement) {\n  var sideSettings = largeWhiteCircleModel['sides']['vSides'][side];\n  var shiftPercent = getRandomArbitrary(sideSettings['from'], sideSettings['to']);\n  var shift = diameter / 100 * shiftPercent; // console.log(circleElement, side, shiftPercent, shift)\n\n  if (side === 'top') {\n    circleElement.style.top = ['-', shift, 'px'].join('');\n  } else if (side === 'bottom') {\n    circleElement.style.bottom = ['-', shift, 'px'].join('');\n  }\n\n  return shift;\n}\n\nfunction generateShiftXFromSide(side, diameter, circleElement) {\n  var sideSettings = largeWhiteCircleModel['sides']['hSides'][side];\n  var shiftPercent = getRandomArbitrary(sideSettings['from'], sideSettings['to']);\n  var shift = diameter / 100 * shiftPercent; // console.log(circleElement, side, shiftPercent, shift)\n\n  if (side === 'left') {\n    circleElement.style.left = ['-', shift, 'px'].join('');\n  } else if (side === 'right') {\n    circleElement.style.right = ['-', shift, 'px'].join('');\n  }\n\n  return shift;\n}\n\nfunction generateStory() {\n  // for (var i = 0; i < sample(particlesQuantity); i++) {\n  //   createCircle(frame)\n  // }\n  createLargeWhiteCircle().then(createLargeWhiteCircle);\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var container = document.getElementsByClassName('prototype_4')[0];\n  var frame = document.createElement('div');\n  frame.classList.add('frame');\n  container.appendChild(frame);\n  generateStory();\n});","map":{"version":3,"sources":["/Users/rubyshuler/Desktop/generative-art-main/app/javascript/packs/ejnrkf/prototype_4.js"],"names":["getRandomArbitrary","sample","getFrame","largeWhiteCircleModel","circleModel","getLargeWhiteCircleStore","setLargeWhiteCircleStore","createLargeWhiteCircle","Promise","resolve","reject","console","log","circles","settings","length","firstCircleVSide","firstCircleHSide","firstCircleSize","vSide","hSide","size","createCircle","className","Object","keys","push","zIndex","frame","largeWhiteCircleStore","circleElement","document","createElement","circleType","classList","add","vSideSettings","hSideSettings","sizeSettings","diameterPercent","diameter","getBoundingClientRect","width","shiftY","generateShiftYFromSide","shiftX","generateShiftXFromSide","types","style","join","height","appendChild","side","sideSettings","shiftPercent","shift","top","bottom","left","right","generateStory","then","addEventListener","container","getElementsByClassName"],"mappings":"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","sourcesContent":["import {\n  getRandomArbitrary,\n  sample,\n  getFrame\n} from '../prototypes/prototype_4/utilities'\n\nimport {\n  largeWhiteCircleModel,\n  circleModel\n} from '../prototypes/prototype_4/models'\n\nimport {\n  getLargeWhiteCircleStore,\n  setLargeWhiteCircleStore\n} from '../prototypes/prototype_4/store'\n\nfunction createLargeWhiteCircle() {\n  return new Promise(function (resolve, reject) {\n    console.log('createLargeWhiteCircle call')\n    const circles = getLargeWhiteCircleStore()\n    let settings\n\n    if (circles.length) {\n      const firstCircleVSide = circles[0]['types']['vSide']\n      const firstCircleHSide = circles[0]['types']['hSide']\n      const firstCircleSize = circles[0]['types']['size']\n\n      const vSide = firstCircleVSide == 'top' ? 'bottom' : 'top'\n      const hSide = firstCircleHSide == 'left' ? 'right' : 'left'\n      const size = firstCircleSize == 'small' ? 'large' : 'small'\n\n      settings = createCircle(\n        largeWhiteCircleModel.className,\n        vSide,\n        hSide,\n        size,\n        1\n      )\n    } else {\n      const vSide = sample(\n        Object.keys(largeWhiteCircleModel['sides']['vSides'])\n      )\n\n      const hSide = sample(\n        Object.keys(largeWhiteCircleModel['sides']['hSides'])\n      )\n\n      const size = sample(Object.keys(largeWhiteCircleModel['sizes']))\n\n      settings = createCircle(\n        largeWhiteCircleModel.className,\n        vSide,\n        hSide,\n        size,\n        1\n      )\n    }\n\n    circles.push(settings)\n    setLargeWhiteCircleStore(circles)\n\n    resolve()\n  })\n}\n\nfunction createCircle(className, vSide, hSide, size, zIndex) {\n  const frame = getFrame()\n  const largeWhiteCircleStore = getLargeWhiteCircleStore()\n  const circleElement = document.createElement('div')\n  const circleType = circleModel['largeCircleWhite']\n  circleElement.classList.add('circle')\n\n  const vSideSettings = largeWhiteCircleModel['sides'][vSide]\n  const hSideSettings = largeWhiteCircleModel['sides'][hSide]\n  const sizeSettings = largeWhiteCircleModel['sizes'][size]\n\n  const diameterPercent = getRandomArbitrary(\n    sizeSettings['from'],\n    sizeSettings['to']\n  )\n\n  const diameter = (frame.getBoundingClientRect().width / 100) * diameterPercent\n  const shiftY = generateShiftYFromSide(vSide, diameter, circleElement)\n  const shiftX = generateShiftXFromSide(hSide, diameter, circleElement)\n\n  const settings = {\n    types: {\n      vSide,\n      hSide,\n      size\n    },\n    shiftY,\n    shiftX,\n    diameter\n  }\n\n  circleElement.style.width = [diameter, 'px'].join('')\n  circleElement.style.height = [diameter, 'px'].join('')\n  circleElement.style.zIndex = zIndex\n  circleElement.classList.add(className)\n\n  frame.appendChild(circleElement)\n\n  return settings\n}\n\nfunction generateShiftYFromSide(side, diameter, circleElement) {\n  const sideSettings = largeWhiteCircleModel['sides']['vSides'][side]\n\n  const shiftPercent = getRandomArbitrary(\n    sideSettings['from'],\n    sideSettings['to']\n  )\n\n  const shift = (diameter / 100) * shiftPercent\n\n  // console.log(circleElement, side, shiftPercent, shift)\n\n  if (side === 'top') {\n    circleElement.style.top = ['-', shift, 'px'].join('')\n  } else if (side === 'bottom') {\n    circleElement.style.bottom = ['-', shift, 'px'].join('')\n  }\n\n  return shift\n}\n\nfunction generateShiftXFromSide(side, diameter, circleElement) {\n  const sideSettings = largeWhiteCircleModel['sides']['hSides'][side]\n\n  const shiftPercent = getRandomArbitrary(\n    sideSettings['from'],\n    sideSettings['to']\n  )\n\n  const shift = (diameter / 100) * shiftPercent\n\n  // console.log(circleElement, side, shiftPercent, shift)\n\n  if (side === 'left') {\n    circleElement.style.left = ['-', shift, 'px'].join('')\n  } else if (side === 'right') {\n    circleElement.style.right = ['-', shift, 'px'].join('')\n  }\n\n  return shift\n}\n\nfunction generateStory() {\n  // for (var i = 0; i < sample(particlesQuantity); i++) {\n  //   createCircle(frame)\n  // }\n\n  createLargeWhiteCircle().then(createLargeWhiteCircle)\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const container = document.getElementsByClassName('prototype_4')[0]\n  const frame = document.createElement('div')\n  frame.classList.add('frame')\n  container.appendChild(frame)\n  generateStory()\n})\n"]},"metadata":{},"sourceType":"module"}